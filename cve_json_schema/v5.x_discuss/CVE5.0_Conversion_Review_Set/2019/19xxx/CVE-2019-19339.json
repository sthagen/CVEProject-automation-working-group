{
    "CVE_data_meta": {
        "ASSIGNER": "secalert@redhat.com",
        "ID": "CVE-2019-19339",
        "STATE": "PUBLIC",
        "UPDATED": "2020-06-15"
    },
    "cna-container": {
        "affected": {
            "vendors": [
                {
                    "products": [
                        {
                            "versions": [
                                {
                                    "version_value": "n/a"
                                }
                            ]
                        }
                    ],
                    "vendor_name": "Red Hat"
                }
            ]
        },
        "descriptions": [
            {
                "lang": "eng",
                "value": "It was found that the Red Hat Enterprise Linux 8 kpatch update did not include the complete fix for CVE-2018-12207. A flaw was found in the way Intel CPUs handle inconsistency between, virtual to physical memory address translations in CPU's local cache and system software's Paging structure entries. A privileged guest user may use this flaw to induce a hardware Machine Check Error on the host processor, resulting in a severe DoS scenario by halting the processor. System software like OS OR Virtual Machine Monitor (VMM) use virtual memory system for storing program instructions and data in memory. Virtual Memory system uses Paging structures like Page Tables and Page Directories to manage system memory. The processor's Memory Management Unit (MMU) uses Paging structure entries to translate program's virtual memory addresses to physical memory addresses. The processor stores these address translations into its local cache buffer called - Translation Lookaside Buffer (TLB). TLB has two parts, one for instructions and other for data addresses. System software can modify its Paging structure entries to change address mappings OR certain attributes like page size etc. Upon such Paging structure alterations in memory, system software must invalidate the corresponding address translations in the processor's TLB cache. But before this TLB invalidation takes place, a privileged guest user may trigger an instruction fetch operation, which could use an already cached, but now invalid, virtual to physical address translation from Instruction TLB (ITLB). Thus accessing an invalid physical memory address and resulting in halting the processor due to the Machine Check Error (MCE) on Page Size Change."
            }
        ],
        "metrics": [
            {
                "cvss-v_3_0": {
                    "vectorString": "6.5/CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H",
                    "version": "3.0"
                }
            }
        ],
        "problemtypes": {
            "descriptions": [
                [
                    {
                        "CWE-ID": "CWE-805",
                        "description": "CWE-805",
                        "lang": "eng",
                        "type": "CWE"
                    }
                ]
            ]
        },
        "references": [
            {
                "name": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-19339",
                "refsource": "CONFIRM",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-19339"
            }
        ]
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "5.0"
}